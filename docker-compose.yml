version: '3'

services:
  tracker-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    volumes:
      - database-volume:/var/lib/postgresql/data
    container_name: tracker-db
    ports:
      - "0.0.0.0:7432:5432"
    networks:
       - tracker-net
    healthcheck:
      test: pg_isready -U ${DB_USERNAME} -q -d ${DB_NAME}
      interval: 10s
      timeout: 5s
      retries: 3

  tracker-elastic:
    image: kunansy/tracker_elastic:8.2.3
    container_name: tracker-elastic
    command: elasticsearch
    env_file: .env
    restart: always
    environment:
      - cluster.initial_master_nodes[0]=localhost
      - xpack.security.enabled=false
      - ingest.geoip.downloader.enabled=false
      - cluster.name=tracker-elastic
      - discovery.type=single-node
      - http.cors.enabled=true
      - http.cors.allow-credentials=true
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-origin=/https?:\/\/localhost(:[0-9]+)?/
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "0.0.0.0:9200:9200"
      - "0.0.0.0:9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - tracker-net
    healthcheck:
      test: curl -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  reading-tracker:
    image: kunansy/reading_tracker:2.10.0
    container_name: reading-tracker
    env_file: .env
    restart: always
    depends_on:
      - tracker-db
      - tracker-elastic
    ports:
       - "0.0.0.0:${API_PORT}:8000"
    entrypoint: ["uvicorn", "tracker.main:app", "--port", "8000", "--host", 
                 "0.0.0.0", "--loop", "uvloop", "--workers", "${API_ASGI_WORKERS}"]
    networks:
      - tracker-net
    volumes:
      - ./data:/app/data 
    healthcheck:
      test: curl -f http://localhost:8000/readiness || exit 1
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  database-volume:
  esdata:

networks:
  tracker-net:
